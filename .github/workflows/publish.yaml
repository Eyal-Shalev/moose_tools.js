name: Publish

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true

defaults:
  run:
    shell: bash


permissions:
  contents: read
  packages: write

jobs:
  validate_version:
    name: Validate version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    steps:
      - name: Get Raw Version
        id: raw_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "raw_version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_type }}" == "tag" ]; then
            echo "raw_version=${{ github.ref }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_type }}" == "branch" ]; then
            echo "raw_version=0.0.0-${{ github.sha }}" >> "$GITHUB_OUTPUT"
          fi
      - id: semver
        uses: matt-usurp/validate-semver@v1
        with:
          version: ${{ steps.raw_version.outputs.raw_version }}

  compile_and_publish:
    name: Compile and Publish
    runs-on: ubuntu-latest

    strategy:
      matrix:
        registry: [ "github" ]
        include:
          - registry: "github"
            registry-url: "https://npm.pkg.github.com"
            scope: "@${{ github.repository_owner }}"
            npm_token_secret: "GITHUB_TOKEN"

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: ${{ matrix.registry-url }}
          scope: ${{ matrix.scope }}

      - name: Compile
        run: ./scripts/compile.ts "${{ steps.validate_version.outputs.version }}"

      - name: Install Dependencies
        working-directory: "./dist"
        run: npm ci

      - name: Publish
        working-directory: "./dist"
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.npm_token_secret] }}
        run: npm publish --access public --registry ${{ matrix.registry-url }} --tag ${{ steps.validate_version.outputs.version }}
