name: Publish

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true

defaults:
  run:
    shell: bash


permissions:
  contents: read
  packages: write

jobs:
  validate_version:
    name: Validate version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
      npm_tag: ${{ steps.npm_tag.outputs.npm_tag }}
    steps:
      - name: Get Raw Version
        id: raw_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "raw_version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_type }}" == "tag" ]; then
            echo "raw_version=${{ github.ref }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_type }}" == "branch" ]; then
            echo "raw_version=0.0.0-${{ github.sha }}" >> "$GITHUB_OUTPUT"
          fi
      - id: semver
        uses: matt-usurp/validate-semver@v1
        with:
          version: ${{ steps.raw_version.outputs.raw_version }}

      - id: npm_tag
        run: |
          if [ "${{ steps.semver.outputs.extra }}" == "" ]; then
            echo "npm_tag=latest" >> "$GITHUB_OUTPUT"
          else
            echo "npm_tag=dev" >> "$GITHUB_OUTPUT"
          fi

  compile:
    name: Compile
    runs-on: ubuntu-latest
    needs: [ validate_version ]

    steps:

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          registry-url: ${{ matrix.registry-url }}
          scope: ${{ matrix.scope }}

      - name: Compile
        run: ./scripts/compile.ts --name="${{ matrix.scope }}/moose_tools" --version="${{ needs.validate_version.outputs.version }}"

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: ./dist

  publish:
    name: Publish
    runs-on: ubuntu-latest
    needs: [ compile ]

    strategy:
      matrix:
        registry: [ "github" ]
        include:
          - registry: "github"
            registry-url: "https://npm.pkg.github.com"
            scope: "@${{ github.repository_owner }}"
            npm_token_secret: "GITHUB_TOKEN"

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist

      - name: Publish
        working-directory: "./dist"
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.npm_token_secret] }}
        run: |
          yarn publish \
            --access public \
            --registry "${{ matrix.registry-url }}" \
            --tag "${{ needs.validate_version.outputs.npm_tag }}"

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ compile ]

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: ./dist

      - name: Pack
        run: yarn pack --cwd dist -f dist.tar.gz

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist.tar.gz
          tag_name: v${{ needs.validate_version.outputs.version }}
          body: |
            # Release ${{ needs.validate_version.outputs.version }}
            Changelog TBD
          draft: false
          prerelease: ${{ steps.semver.outputs.extra != "" }}
