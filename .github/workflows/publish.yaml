name: Publish

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: "Version to publish"
        required: true

defaults:
  run:
    shell: bash

jobs:

  validate_version:
    name: Validate version
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.semver.outputs.version }}
    steps:
      - name: Get Raw Version
        id: raw_version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "raw_version=${{ github.event.inputs.version }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_type }}" == "tag" ]; then
            echo "raw_version=${{ github.ref }}" >> "$GITHUB_OUTPUT"
          elif [ "${{ github.ref_type }}" == "branch" ]; then
            echo "raw_version=0.0.0-${{ github.sha }}" >> "$GITHUB_OUTPUT"
          fi
      - id: semver
        uses: matt-usurp/validate-semver@v1
        with:
          version: ${{ steps.raw_version.outputs.raw_version }}

  compile_and_publish:
    name: Compile and Publish
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: 'https://npm.pkg.github.com'
          always-auth: true

      - name: Print npmrc
        run: cat "$NPM_CONFIG_USERCONFIG"

      - name: validate setup
        env:
          NODE_AUTH_TOKEN: ${{ github.token }}
        run: |
          npm whoami --registry https://npm.pkg.github.com

      - name: Print NPM errors
        if: failure()
        run: |
          cat /home/runner/.npm/_logs/*.log

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Compile
        run: ./scripts/compile.ts "${{ steps.validate_version.outputs.version }}"

      - name: Install Dependencies
        working-directory: "./dist"
        run: npm ci

#      - name: Publish
#        working-directory: "./dist"
#        env:
#          NODE_AUTH_TOKEN: ${{ matrix.npm_token }}
#        run: npm publish --access public
